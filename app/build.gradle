apply plugin: 'com.android.application'

//加载资源
Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
properties.load(inputStream)

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    // 签名文件
    signingConfigs {
        config {
            keyAlias 'foryou'
            keyPassword properties.getProperty('keyPassword')
            storeFile file('../lyl.jks')
            storePassword properties.getProperty('keyPassword')
        }
    }

    defaultConfig {
        applicationId "com.lyl.myallforyou"
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 2
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a'//, 'x86_64', 'arm64-v8a'
        }
    }

    productFlavors {
//        foryouDev {
//            buildConfigField "String", "Environment", '"dev"'
//            buildConfigField "String", "BuglyAppId", properties.getProperty('BuglyAppId')
//            buildConfigField "String", "AVOSCloudAppId", properties.getProperty('AVOSCloudAppId')
//            buildConfigField "String", "AVOSCloudAppKey", properties.getProperty('AVOSCloudAppKey')
//            manifestPlaceholders = [GAODE_KEY: properties.getProperty('gaodeKey')]
//        }
        foryou {
            buildConfigField "String", "Environment", '"prod"'
            buildConfigField "String", "BuglyAppId", properties.getProperty('BuglyAppId')
            buildConfigField "String", "AVOSCloudAppId", properties.getProperty('AVOSCloudAppId')
            buildConfigField "String", "AVOSCloudAppKey", properties.getProperty('AVOSCloudAppKey')
            manifestPlaceholders = [GAODE_KEY: properties.getProperty('gaodeKey')]
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    //为了解决部分第三方库重复打包了META-INF的问题
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //    compile 'com.squareup.okhttp3:logging-interceptor:3.7.0'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.6.0'
    compile 'com.github.chrisbanes:PhotoView:2.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.google.zxing:core:3.2.1'
    compile 'com.journeyapps:zxing-android-embedded:3.3.0'
    compile 'cn.leancloud.android:avoscloud-sdk:v3.16.4'
    compile 'com.tencent.bugly:crashreport_upgrade:1.2.5'
    compile 'com.tencent.bugly:nativecrashreport:3.1.2'
}
